package co.com.kalettre.modelo;
// Generated 19/09/2019 01:37:33 PM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Consulta generated by hbm2java
 */
@Entity
@Table(name = "consulta", schema = "public")
public class Consulta implements java.io.Serializable {

	private int idConsulta;
	private Especialidad especialidad;
	private Medico medico;
	private Paciente paciente;
	private Date fecha;
	private Set<DetalleConsulta> detalleConsultas = new HashSet<DetalleConsulta>(0);
	private Set<Examen> examens = new HashSet<Examen>(0);

	public Consulta() {
	}

	public Consulta(int idConsulta, Especialidad especialidad, Medico medico, Paciente paciente) {
		this.idConsulta = idConsulta;
		this.especialidad = especialidad;
		this.medico = medico;
		this.paciente = paciente;
	}

	public Consulta(int idConsulta, Especialidad especialidad, Medico medico, Paciente paciente, Date fecha,
			Set<DetalleConsulta> detalleConsultas, Set<Examen> examens) {
		this.idConsulta = idConsulta;
		this.especialidad = especialidad;
		this.medico = medico;
		this.paciente = paciente;
		this.fecha = fecha;
		this.detalleConsultas = detalleConsultas;
		this.examens = examens;
	}

	@Id

	@Column(name = "id_consulta", unique = true, nullable = false)
	public int getIdConsulta() {
		return this.idConsulta;
	}

	public void setIdConsulta(int idConsulta) {
		this.idConsulta = idConsulta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_especialidad", nullable = false)
	public Especialidad getEspecialidad() {
		return this.especialidad;
	}

	public void setEspecialidad(Especialidad especialidad) {
		this.especialidad = especialidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_medico", nullable = false)
	public Medico getMedico() {
		return this.medico;
	}

	public void setMedico(Medico medico) {
		this.medico = medico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_paciente", nullable = false)
	public Paciente getPaciente() {
		return this.paciente;
	}

	public void setPaciente(Paciente paciente) {
		this.paciente = paciente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulta")
	public Set<DetalleConsulta> getDetalleConsultas() {
		return this.detalleConsultas;
	}

	public void setDetalleConsultas(Set<DetalleConsulta> detalleConsultas) {
		this.detalleConsultas = detalleConsultas;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "consulta_examen", schema = "public", joinColumns = {
			@JoinColumn(name = "id_consulta", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_examen", nullable = false, updatable = false) })
	public Set<Examen> getExamens() {
		return this.examens;
	}

	public void setExamens(Set<Examen> examens) {
		this.examens = examens;
	}

}
